name: PR Pipeline

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, edited]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests and collect coverage
        run: npm run test:coverage

      - name: Upload unit test coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 1

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    needs: lint
    environment: integration

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Build Application
        run: npm run build

      - name: Start Wrangler Dev Server and Wait
        run: |
          npx wrangler dev --local-protocol=http --port 8787 dist/_worker.js/index.js &> wrangler.log &
          sleep 10
        # Wait for Wrangler to start (adjust sleep duration if needed)
        # Check logs for confirmation or use a more robust wait mechanism if necessary

      - name: Display Wrangler Logs
        if: always() # Ensure this step runs even if the previous one fails in some way (though wrangler dev in background might not cause immediate failure)
        run: |
          echo "--- Wrangler Logs ---"
          cat wrangler.log
          echo "---------------------"

      - name: Install Playwright browser Chromium
        run: npx playwright install --with-deps chromium

      - name: Run E2E Tests and collect coverage
        run: npx playwright test --project=chromium --grep-invert @visual
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          # Configure Playwright to use the wrangler dev server address
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:8787

      # You might want to add a step here to stop the background wrangler process,
      # but GitHub Actions typically cleans up background processes when a step finishes.
      # If issues arise, a specific kill command might be needed.

      - name: Upload E2E test coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-coverage
          path: playwright-report/
          retention-days: 1

  status-comment:
    name: Update PR Status
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: success()

    steps:
      - name: Download all coverage reports
        uses: actions/download-artifact@v4
        with:
          path: coverage-reports

      - name: Post status comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            âœ… All checks passed! Unit tests, E2E tests, and linting were successful. 

            Coverage reports have been generated and are available as artifacts.
